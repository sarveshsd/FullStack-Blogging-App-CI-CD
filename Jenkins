pipeline {
    agent any
    
    tools {
        jdk 'jdk17'
        maven 'maven3'
    }
    
    environment {
        SCANNER_HOME = tool 'Sonar-Scanner'
    }

    stages {
        stage('Git Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/sarveshsd/FullStack-Blogging-App-CI-CD.git'
            }
        }
        
        stage('Compile') {
            steps {
                sh 'mvn compile'
            }
        }
        
        stage('test') {
            steps {
                echo 'mvn test'
            }
        }
        
        stage('Trivy FS Scan') {
            steps {
                sh 'trivy fs --format table -o fs.html .'
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('sonar-server') {
                sh '''$SCANNER_HOME/bin/sonar-scanner -Dsonar.projectName=Blogging-app -Dsonar.projectKey=Blogging-app \
                    -Dsonar.java.binaries=target'''
                }
            }
        }
        
        // stage('Build') {
        //     steps {
        //         echo 'mvn package'
        //     }
        // }
        
        
        // stage('Publish Artifacts') {
        //     steps {
        //         withMaven(globalMavenSettingsConfig: 'maven-settings', jdk: 'jdk17', maven: 'maven3', mavenSettingsConfig: '', traceability: true) {
        //             sh "mvn deploy"
        //         }
        //     }
        // }
        
        stage('Docker build & tag') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker build -t sarveshsd/blooging-app:latest ."
                    }
                }
            }
        }
        
        stage('Docker Scan') {
            steps {
                sh 'trivy image --format table -o image.html sarveshsd/blooging-app:latest'
            }
        }
        
        stage('Docker Push') {
            steps {
                script {
                    withDockerRegistry(credentialsId: 'docker-cred', toolName: 'docker') {
                        sh "docker push sarveshsd/blooging-app:latest"
                    }
                }
            }
        }
    }
}

